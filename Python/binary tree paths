# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        paths = []
        def traverse(node,path):
            if node != root:
                path += f"->{node.val}"
            if node.left == None and node.right == None:
                paths.append(path)
                return
            if node.left:
                traverse(node.left,path)
            if node.right:
                traverse(node.right,path)
        traverse(root,f"{root.val}")
        return paths
