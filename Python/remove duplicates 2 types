# its ok but not fast enough.. somehow
class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        curr_item = nums[0]
        curr_count = 1
        i=1
        while i<len(nums):
            if curr_item!=nums[i]:
                curr_count = 1
                curr_item = nums[i]
            else:
                curr_count+=1
                if curr_count>2:
                    curr_count-=1
                    nums.pop(i)
                    i-=1
            i+=1
        return len(nums)

                
# weird 2 pointer thingy
class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        slow = 2
        for fast in range(2,len(nums)):
            if nums[fast] != nums[slow-2]:
                nums[slow] = nums[fast]
                slow+=1
                
        return slow

                
